Semaine 10 :

FINAL : 

Sur l'organisation :

 - revoir ses priorités : au lieu d'essayer d'avoir les images de la balise avec la caméra du robot, il aurait fallu essayer de faire fonctionner le carré
 - on aurait ensuite pu transformer les images tel. en array pendant les vacances et travailler sur ca 

Sur l'organisation du code ;
 - utiliser les init.py (voir dans brouillon pour un exemple d'utilisation)
 - avoir des obstacles dans la 3D (au lieu de la matrice et les hitbox on peut représenter les obstacles par leurs coordonnées et ensuite on a une liste d'objets (1 objet = 1 liste de points (polyèdre)))
 - mettre les motor_left et right dans le mockup et non pas dans l'adaptateur
 - mettre les constantes du mockup dans la classe mockup et pas en dehors
 - on ne doit pas rajouter dans le mockup des choses qui nous forceraient par la suite à changer le robot réel, c'est pas ce qu'on veut
 - l'adaptateur doit vraiment adapter de IN013, pas le modifier
 - le mockup et le robot reel doivent utiliser le même adaptateur

Sur le code en lui-même :
 - ne plus avoir de majuscules dans les sous-modules : mettre tous les noms de modules en miniscule
 - pas de _ (underscore) dans les noms de classe, c'est juste pour les attributs
 - pas de majuscules dans les noms d'attributs, c'est pour les méthodes
 - noms de fonctions/méthodes doivent respecter : verbe + cod. ex : distance_parcourue() -> get_distance()

 - dans le refresh du robot, juste refresh est suffisant c'est pas la peine de dire refreshRobot puisque on va faire robot.refresh
 - dans le refresh du robot la variable pente n'est pas explicite, on a l'impression que c'est a cause d'un terrain parce qu'on evolue en 3D ou autre -> il faut que les noms de variables soient explicites






Brouillon :

« ça se voit que c’est de la 3D quand même »

Revoir ses priorités
Au lieu de passer la matinée à faire les balises il aurait mieux fallu essayer de tester les stratégies et faire un carré etc
On peut prendre les photos des balises avec le téléphone et les traiter pendant les vancaces

Array numpy format pixel - taille du format de l’image *3 rbg
C’est juste une image en array eft

On peut prendre une photo avec le téléphone puis la transformer en array pendant les vacances 

Ne plus avoir des sous-modules avec des majuscules
Soit partout des majuscules soit partout des minuscules

Dans main from sec import interface par ex au lieu de truc.truc.truc

Avoir les obstacles dans la 3D aussi
On peut avoir les obstacles représentés par leurs coordonnées et après avoir une liste d’objets, les objets étant des polyèdres (la représentation des points des obstacles)

Pas de _ dans les noms de classe (juste pour les attributs)
Underscore dans les 
Mettre tous les modules en minuscule

Un bon nom de fonction c’est un verbe et un cod ex : distance_parcourue : get_distance
Return self.get_distance()

Pente dans le refresh 
self.motor_left et self.motor_right on peut les définir dans le mockup au lieu de l’adaptateur

self.robot.estCrash et self.robot.estSousControle a mettre dans l’adaptateur et pas dans le robot
Il faut pas rajouter d’attributs dans la classe mockup qui n’existent pas 
Parce que du coup on rajoute

Il faut que le mockup et le réel utilisent le meme adaptateur 


Les constantes au début du fichier mockup doivent être dans la classe mockup pas en dehors du fichier

Bien faire les init.py
